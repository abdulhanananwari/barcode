{"version":3,"sources":["app.js","link.factory.js","route.config.js","app/barcode/barcode.model.js","app/barcode/upload/barcodeUpload.controller.js","app/barcode/show/barcodeShow.controller.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["var geloraBarcode = angular\r\n    .module('Gelora.Barcode', ['ui.router', 'angular-jwt','Solumax.CsvUploader',\r\n    ])\r\n    .factory('AppFactory', function() {\r\n\r\n        var appFactory = {};\r\n\r\n        appFactory.moduleId = '10033';\r\n        localStorage.setItem('module_id', appFactory.moduleId)\r\n\r\n        return appFactory;\r\n    })\r\n","geloraBarcode\r\n    .factory('LinkFactory', function() {\r\n\r\n        var hostname = window.location.hostname\r\n        var env = hostname.substring(0, 3) == '192' ? 'dev' : 'prod';\r\n\r\n        var domains = {\r\n          \r\n            barcode: window.location.protocol + '//' + window.location.host + '/',\r\n        }\r\n\r\n        var apps = {\r\n            barcode: domains.barcode + 'barcode/',\r\n        }\r\n\r\n        var urls = {\r\n           \r\n            barcode: apps.barcode + 'api/barcode/',\r\n            views: apps.barcode + 'views/barcode/',\r\n            \r\n            }\r\n\r\n        return urls\r\n    })\r\n","geloraBarcode\r\n        .config(function ($stateProvider, $urlRouterProvider) {\r\n\r\n            $urlRouterProvider.otherwise('/index');\r\n\r\n            $stateProvider\r\n                    .state('index', {\r\n                        url: '/index',\r\n                        templateUrl: 'app/barcode/upload/barcodeUpload.html',\r\n                        controller: 'BarcodeUploadController as ctrl',\r\n                        requireLogin: false,\r\n                        pageTitle: 'Dealer | Barcode'\r\n                    })\r\n                    .state('barcodeShow', {\r\n                        url: '/show/:id',\r\n                        templateUrl: 'app/barcode/show/barcodeShow.html',\r\n                        controller: 'BarcodeShowController as ctrl',\r\n                        requireLogin: false,\r\n                        pageTitle: 'Dealer | Barcode'\r\n                    })\r\n                });\r\n\r\n","geloraBarcode\r\n\t.factory('BarcodeModel', function(\r\n\t\t$http,\r\n\t\tLinkFactory) {\r\n\r\n\t\tvar barcodeModel = {}\r\n\r\n\t\tbarcodeModel.index = function(params) {\r\n\r\n\t\t\treturn $http.get(LinkFactory.barcode, {params: params})\r\n\t\t}\r\n\r\n\t\tbarcodeModel.store = function(barcode) {\r\n\r\n\t\t\treturn $http.post(LinkFactory.barcode, barcode)\r\n\t\t}\r\n\t\tbarcodeModel.get = function(id) {\r\n\t\t\treturn $http.get(LinkFactory.barcode + id  )\r\n\t\t}\r\n\r\n\t\treturn barcodeModel\r\n\t})","geloraBarcode\r\n    .controller('BarcodeUploadController', function(\r\n        CsvUploader, BarcodeModel,LinkFactory\r\n    ) {\r\n\r\n        var vm = this\r\n\r\n        vm.loadFile = function() {\r\n            CsvUploader.parse(document.getElementById('csv-file').files[0], { delimiter: ',' })\r\n                .then(function(data) {\r\n                    loadIndex(data.data)\r\n                })\r\n        }\r\n        vm.generate = function(barcode){\r\n        \tvar id  = barcode.barcode.id;\r\n            window.open(LinkFactory.views + id + '/generate-label/')\r\n\t\t}\r\n\t\tvm.uploadAll = function() {\r\n\r\n        \tCsvUploader.upload(vm.barcodes, {upload: upload})\r\n        }\r\n        function loadIndex(data) {\r\n\r\n            BarcodeModel.index()\r\n\r\n                .then(function(res) {\r\n                    var existingBarcodes = res.data.data\r\n\r\n                    _.each(data, function(newBarcode) {\r\n                        newBarcode.barcode = _.find(existingBarcodes, function(existingBarcode) {\r\n                            return existingBarcode.engine_number == newBarcode.engine_number\r\n                            console.log(newBarcode)\r\n\r\n                        })\r\n                        newBarcode.sales_date = moment(newBarcode.sales_date, \"MM/DD/YYYY\").format(\"DD-MM-YYYY\");\r\n                        newBarcode.status = 'OK'\r\n\r\n                      \r\n                    })\r\n                    console.log(data)\r\n                    vm.barcodes = data\r\n\r\n                })\r\n        }\r\n         var upload = function(barcode) {\r\n\r\n        \tif (typeof barcode.existingBarcode == 'undefined') {\r\n        \t\t\r\n\t\t\t\treturn BarcodeModel.store(barcode)\r\n\t\t\t\t.then(function(res) {\r\n\t\t\t\t\tbarcode.status = 'Berhasil Disimpan'\r\n\t\t\t\t})\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// return PriceModel.update(price.model_id, price)\r\n\t\t\t\t// .then(function(res) {\r\n\r\n\t\t\t\t// \tprice.status = 'Berhasil Diupdate'\r\n\t\t\t\t// })\r\n\t\t\t\t\r\n        \t}\r\n        }\r\n\r\n\r\n    })","geloraBarcode\r\n\t.controller('BarcodeShowController', function(\r\n\t\t$state,LinkFactory,\r\n\t\tBarcodeModel\r\n\t\t) {\r\n\r\n\t\tvar vm = this\r\n\r\n\t\t$('#date').datepicker({ dateFormat: \"yy-mm-dd\" });\r\n\r\n\t\tvm.store = function(barcode){\r\n\t\t\tBarcodeModel.store(barcode)\r\n\t\t\t.then(function(res){\r\n\t\t\t\t$state.go('barcodeShow', {id: res.data.data.id})\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tvm.generate = function(barcode){\r\n            window.open(LinkFactory.views + barcode.id + '/generate-label/')\r\n\t\t}\r\n\t\tif ($state.params.id) {\r\n\r\n\t\t\tBarcodeModel.get($state.params.id)\r\n\t\t\t.then(function(res){\r\n\t\t\t\tvm.barcode = res.data.data\r\n\t\t\t})\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t})"],"sourceRoot":"/source/"}